##
# The BSD 3-Clause License. http://www.opensource.org/licenses/BSD-3-Clause
#
# This file is part of mingw-env project.
# Copyright (c) 2011,2012, by niXman (i dotty nixman doggy gmail dotty com)
# All rights reserved.
# Project: mingw-env ( http://sourceforge.net/projects/mingw-env/ )
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# - Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the distribution.
# - Neither the name of the 'mingw-env' nor the names of its contributors may
#     be used to endorse or promote products derived from this software
#     without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

# **************************************************************************
# **************************************************************************
# **************************************************************************

source version.mfun

function func_set_pkg_list {
	# $1 - user input list
	# $2 - output pkg list
	
	local -a _input_list=( "${!1}" )
	local -a _output_list=()
	local _max_version
	local _filename
	local _curr_version
	local _curr_file	

	[[ ${#_input_list[@]} == 0 ]] && echo "Empty list"
	
	for it in "${_input_list[@]}"; do
		local _list_files=()
		if [ ! -d $RULES_DIR/${it} ]
		then
			_list_files=( $(find $RULES_DIR -type f -name "${it}.$RULES_EXT") )
			if [ ${#_list_files[@]} == 0 ]
			then
				echo "Package ${it} not found."
				exit 1
			else
				_output_list=("${_output_list[@]}" "${_list_files[@]:0:1}")
			fi
		else
			_list_files=( $(find $RULES_DIR/${it} -type f -name "*.$RULES_EXT") )
			_max_version=""
			if [ ${#_list_files[@]} == 0 ]
			then
				echo "Packages not found in $RULES_DIR/${it}."
				exit 1
			else
				for it1 in "${_list_files[@]}"; do
					if [ "$_max_version" ]
					then
						_curr_file=`basename ${it1} .$RULES_EXT`
						_curr_version=${_curr_file#$it-}
						version_compare "${_max_version}" "${_curr_version}"
						
						[[ $? == 1 ]] && {
							_filename=${it1}
							_max_version=$_curr_version
						}
					else 
						_filename=`basename ${it1} .$RULES_EXT`
						_max_version=${_filename#$it-}
						_filename=${it1}
						_curr_version=$_max_version
					fi

				done
				_output_list=("${_output_list[@]}" "${_filename}")
			fi
		fi
	done
	
	echo "${_output_list[@]}"
}

# **************************************************************************
# **************************************************************************
# **************************************************************************